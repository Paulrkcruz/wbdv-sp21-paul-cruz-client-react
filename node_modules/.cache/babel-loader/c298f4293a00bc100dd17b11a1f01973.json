{"ast":null,"code":"var _jsxFileName = \"/Users/kurtiscruz/Desktop/GitHub/wbdv-sp21-paul-cruz-client-react/src/components/course-editor/widgets/widget-list.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport HeadingWidget from \"./heading-widget\";\nimport ParagraphWidget from \"./paragraph-widget\";\nimport { useParams } from \"react-router-dom\";\nimport ListWidget from \"./list-widget\";\nimport ImageWidget from \"./image-widget\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst WidgetList = () => {\n  _s();\n\n  //TODO: move state management to widget-reducer\n  const {\n    topicId\n  } = useParams();\n  const [widgets, setWidgets] = useState([]);\n  const [widget, setWidget] = useState({});\n  useEffect(() => {\n    //TODO: move server communication to widget-service\n    fetch(`http://localhost:8080/api/topics/${topicId}/widgets`).then(response => response.json()).then(widgets => setWidgets(widgets));\n  }, [topicId]);\n\n  const creatWidgetForTopic = () => {\n    //TODO: move server communication to widget-service\n    fetch(`http://localhost:8080/api/topics/${topicId}/widgets`, {\n      method: \"POST\",\n      body: JSON.stringify({\n        name: \"Widget\",\n        type: \"HEADING\",\n        widgetOrder: 1,\n        text: \"New Widget\",\n        url: \"wedget.com\",\n        size: 2,\n        width: 4,\n        cssClass: \"cssClass\",\n        style: \"heading\",\n        value: \"1\"\n      }),\n      headers: {\n        \"content-type\": 'application/json'\n      }\n    }).then(response => response.json()).then(actualWidget => setWidgets(widgets => [...widgets, actualWidget]));\n  };\n\n  const deleteWidget = id => //TODO: move server communication to widget-service\n  fetch(`http://localhost:8080/api/widgets/${id}`, {\n    method: \"DELETE\"\n  }).then(() => {\n    setWidgets(widgets => widgets.filter(w => w.id !== id));\n  });\n\n  const updateWidget = (id, widget) => //TODO: move server communication to widget-service\n  fetch(`http://localhost:8080/api/widgets/${id}`, {\n    method: \"PUT\",\n    body: JSON.stringify(widget),\n    headers: {\n      \"content-type\": 'application/json'\n    }\n  }).then(response => {\n    setWidget({});\n    setWidgets(widgets => widgets.map(w => w.id !== id ? w : widget));\n  });\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Widget List \", widgets.length, \" \", widget.id, /*#__PURE__*/_jsxDEV(\"i\", {\n        onClick: creatWidgetForTopic,\n        className: \"fas fa-plus float-right\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"list-group\",\n      children: widgets.map(_widget => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"list-group-item\",\n        children: [_widget.id === widget.id && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            onClick: () => deleteWidget(_widget.id),\n            className: \"fas fa-trash fa-2x float-right\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n            onClick: () => {\n              updateWidget(_widget.id, widget);\n            },\n            className: \"fas fa-check fa-2x float-right\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 37\n          }, this)]\n        }, void 0, true), _widget.id !== widget.id && /*#__PURE__*/_jsxDEV(\"i\", {\n          onClick: () => setWidget(_widget),\n          className: \"fas fa-cog fa-2x float-right\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 33\n        }, this), _widget.type === \"HEADING\" && /*#__PURE__*/_jsxDEV(HeadingWidget, {\n          setWidget: setWidget,\n          editing: _widget.id === widget.id,\n          widget: _widget\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 33\n        }, this), _widget.type === \"PARAGRAPH\" && /*#__PURE__*/_jsxDEV(ParagraphWidget, {\n          setWidget: setWidget,\n          editing: _widget.id === widget.id,\n          widget: _widget\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 33\n        }, this), _widget.type === \"LIST\" && /*#__PURE__*/_jsxDEV(ListWidget, {\n          setWidget: setWidget,\n          editing: _widget.id === widget.id,\n          widget: _widget\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 33\n        }, this), _widget.type === \"IMAGE\" && /*#__PURE__*/_jsxDEV(ImageWidget, {\n          setWidget: setWidget,\n          editing: _widget.id === widget.id,\n          widget: _widget\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 33\n        }, this)]\n      }, _widget.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n};\n\n_s(WidgetList, \"LRzY4fwBAG50k4rL3zSORcis4ug=\", false, function () {\n  return [useParams];\n});\n\n_c = WidgetList;\nexport default WidgetList;\n\nvar _c;\n\n$RefreshReg$(_c, \"WidgetList\");","map":{"version":3,"sources":["/Users/kurtiscruz/Desktop/GitHub/wbdv-sp21-paul-cruz-client-react/src/components/course-editor/widgets/widget-list.js"],"names":["React","useState","useEffect","HeadingWidget","ParagraphWidget","useParams","ListWidget","ImageWidget","WidgetList","topicId","widgets","setWidgets","widget","setWidget","fetch","then","response","json","creatWidgetForTopic","method","body","JSON","stringify","name","type","widgetOrder","text","url","size","width","cssClass","style","value","headers","actualWidget","deleteWidget","id","filter","w","updateWidget","map","length","_widget"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport HeadingWidget from \"./heading-widget\";\nimport ParagraphWidget from \"./paragraph-widget\";\nimport {useParams} from \"react-router-dom\";\nimport ListWidget from \"./list-widget\";\nimport ImageWidget from \"./image-widget\";\n\n\nconst WidgetList = () => {\n\n    //TODO: move state management to widget-reducer\n    const {topicId} = useParams()\n    const [widgets, setWidgets] = useState([])\n    const [widget, setWidget] =useState({})\n\n    useEffect(() => {\n        //TODO: move server communication to widget-service\n        fetch(`http://localhost:8080/api/topics/${topicId}/widgets`)\n            .then(response => response.json())\n            .then(widgets => setWidgets(widgets))\n    }, [topicId])\n\n    const creatWidgetForTopic = () => {\n        //TODO: move server communication to widget-service\n        fetch(`http://localhost:8080/api/topics/${topicId}/widgets`, {\n            method: \"POST\",\n            body: JSON.stringify({name: \"Widget\", type: \"HEADING\", widgetOrder: 1, text: \"New Widget\",\n                url: \"wedget.com\", size: 2, width: 4, cssClass:\"cssClass\", style:\"heading\", value:\"1\"}),\n            headers: {\n                \"content-type\": 'application/json'\n            }\n        })\n            .then(response => response.json())\n            .then(actualWidget =>\n                setWidgets(widgets => [...widgets, actualWidget]))\n    }\n\n    const deleteWidget = (id) =>\n        //TODO: move server communication to widget-service\n        fetch(`http://localhost:8080/api/widgets/${id}`,{\n            method: \"DELETE\"\n        }).then(() => {\n            setWidgets((widgets) => widgets.filter(w => w.id !== id))\n        })\n\n    const updateWidget = (id, widget) =>\n        //TODO: move server communication to widget-service\n        fetch(`http://localhost:8080/api/widgets/${id}`,{\n            method: \"PUT\",\n            body: JSON.stringify(widget),\n            headers: {\n                \"content-type\": 'application/json'\n            }\n        }).then(response => {\n            setWidget({})\n            setWidgets((widgets) => widgets.map(w => w.id !== id ? w : widget))\n        })\n\n    return(\n        <div>\n            <h2>\n                Widget List {widgets.length} {widget.id}\n                <i onClick={creatWidgetForTopic} className=\"fas fa-plus float-right\"></i>\n            </h2>\n            <ul className=\"list-group\">\n                {\n                    widgets.map(_widget =>\n                        <li key={_widget.id} className=\"list-group-item\">\n                            {\n                                _widget.id === widget.id &&\n                                <>\n                                    <i onClick={() => deleteWidget(_widget.id)} className=\"fas fa-trash fa-2x float-right\"></i>\n                                    <i onClick={() => {\n                                        updateWidget(_widget.id, widget)\n                                    }} className=\"fas fa-check fa-2x float-right\"></i>\n                                </>\n                            }\n                            {\n                                _widget.id !== widget.id &&\n                                <i onClick={() => setWidget(_widget)} className=\"fas fa-cog fa-2x float-right\"></i>\n                            }\n\n                            {\n                                _widget.type === \"HEADING\" &&\n                                <HeadingWidget\n                                    setWidget={setWidget}\n                                    editing={_widget.id === widget.id}\n                                    widget={_widget}/>\n                            }\n                            {\n                                _widget.type === \"PARAGRAPH\" &&\n                                <ParagraphWidget\n                                    setWidget={setWidget}\n                                    editing={_widget.id === widget.id}\n                                    widget={_widget}/>\n                            }\n                            {\n                                _widget.type === \"LIST\" &&\n                                <ListWidget\n                                    setWidget={setWidget}\n                                    editing={_widget.id === widget.id}\n                                    widget={_widget}/>\n                            }\n                            {\n                                _widget.type === \"IMAGE\" &&\n                                <ImageWidget\n                                    setWidget={setWidget}\n                                    editing={_widget.id === widget.id}\n                                    widget={_widget}/>\n                            }\n                        </li>\n                    )\n                }\n            </ul>\n        </div>\n    )\n}\n\nexport default WidgetList"]},"metadata":{},"sourceType":"module"}