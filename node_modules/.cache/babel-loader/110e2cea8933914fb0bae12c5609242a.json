{"ast":null,"code":"import { CREATE_WIDGET, DELETE_WIDGET, UPDATE_WIDGET, FIND_WIDGETS } from \"../actions/widget-actions\";\nconst initialState = {\n  widgets: []\n};\n\nconst widgetReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case DELETE_WIDGET:\n      const state1 = {\n        widgets: state.widgets.filter(widget => {\n          if (widget._id === action.widgetToDelete._id) {\n            return false;\n          } else {\n            return true;\n          }\n        })\n      };\n      return state1;\n\n    case UPDATE_WIDGET:\n      return {\n        widgets: state.widgets.map(w => {\n          if (w._id === action.widget._id) {\n            return action.widget;\n          } else {\n            return w;\n          }\n        })\n      };\n\n    case CREATE_WIDGET:\n      const newState = {\n        widgets: [...state.widgets, action.widget]\n      };\n      return newState;\n\n    case FIND_WIDGETS:\n      return { ...state,\n        widgets: action.widgets\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default widgetReducer;","map":{"version":3,"sources":["/Users/kurtiscruz/Desktop/GitHub/wbdv-sp21-paul-cruz-client-react/src/reducers/widget-reducer.js"],"names":["CREATE_WIDGET","DELETE_WIDGET","UPDATE_WIDGET","FIND_WIDGETS","initialState","widgets","widgetReducer","state","action","type","state1","filter","widget","_id","widgetToDelete","map","w","newState"],"mappings":"AAAA,SAAQA,aAAR,EAAuBC,aAAvB,EAAsCC,aAAtC,EAAqDC,YAArD,QAAwE,2BAAxE;AAGA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,OAAO,EAAE;AADQ,CAArB;;AAIA,MAAMC,aAAa,GAAG,CAACC,KAAK,GAACH,YAAP,EAAqBI,MAArB,KAAgC;AAClD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKR,aAAL;AACI,YAAMS,MAAM,GAAG;AACXL,QAAAA,OAAO,EAAEE,KAAK,CAACF,OAAN,CAAcM,MAAd,CAAqBC,MAAM,IAAI;AACpC,cAAIA,MAAM,CAACC,GAAP,KAAeL,MAAM,CAACM,cAAP,CAAsBD,GAAzC,EAA8C;AAC1C,mBAAO,KAAP;AACH,WAFD,MAEO;AACH,mBAAO,IAAP;AACH;AACJ,SANQ;AADE,OAAf;AAUA,aAAOH,MAAP;;AAEJ,SAAKR,aAAL;AACI,aAAO;AACHG,QAAAA,OAAO,EAAEE,KAAK,CAACF,OAAN,CAAcU,GAAd,CAAkBC,CAAC,IAAI;AAC5B,cAAIA,CAAC,CAACH,GAAF,KAAUL,MAAM,CAACI,MAAP,CAAcC,GAA5B,EAAiC;AAC7B,mBAAOL,MAAM,CAACI,MAAd;AACH,WAFD,MAEO;AACH,mBAAOI,CAAP;AACH;AACJ,SANQ;AADN,OAAP;;AAUJ,SAAKhB,aAAL;AACI,YAAMiB,QAAQ,GAAG;AACbZ,QAAAA,OAAO,EAAE,CACL,GAAGE,KAAK,CAACF,OADJ,EAELG,MAAM,CAACI,MAFF;AADI,OAAjB;AAMA,aAAOK,QAAP;;AAEJ,SAAKd,YAAL;AACI,aAAO,EACH,GAAGI,KADA;AAEHF,QAAAA,OAAO,EAAEG,MAAM,CAACH;AAFb,OAAP;;AAKJ;AACI,aAAOE,KAAP;AAzCR;AA2CH,CA5CD;;AA8CA,eAAeD,aAAf","sourcesContent":["import {CREATE_WIDGET, DELETE_WIDGET, UPDATE_WIDGET, FIND_WIDGETS} from \"../actions/widget-actions\";\n\n\nconst initialState = {\n    widgets: []\n}\n\nconst widgetReducer = (state=initialState, action) => {\n    switch (action.type) {\n        case DELETE_WIDGET:\n            const state1 = {\n                widgets: state.widgets.filter(widget => {\n                    if (widget._id === action.widgetToDelete._id) {\n                        return false\n                    } else {\n                        return true\n                    }\n                })\n            }\n\n            return state1\n\n        case UPDATE_WIDGET:\n            return {\n                widgets: state.widgets.map(w => {\n                    if (w._id === action.widget._id) {\n                        return action.widget\n                    } else {\n                        return w\n                    }\n                })\n            }\n\n        case CREATE_WIDGET:\n            const newState = {\n                widgets: [\n                    ...state.widgets,\n                    action.widget\n                ]\n            }\n            return newState\n\n        case FIND_WIDGETS:\n            return {\n                ...state,\n                widgets: action.widgets\n            }\n\n        default:\n            return state\n    }\n}\n\nexport default widgetReducer"]},"metadata":{},"sourceType":"module"}