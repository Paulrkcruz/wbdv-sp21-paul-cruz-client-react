{"ast":null,"code":"import lessonService from \"../services/lesson-service\";\nexport const FIND_LESSONS = \"FIND_LESSONS\";\nexport const CREATE_LESSON = \"CREATE_LESSON\";\nexport const DELETE_LESSON = \"DELETE_LESSON\";\nexport const UPDATE_LESSON = \"UPDATE_LESSON\";\nexport const findLessonsForModule = (dispatch, moduleId) => {\n  console.log(\"LOAD LESSONS FOR MODULE\");\n  console.log(moduleId);\n  lessonService.findLessonsForModule(moduleId).then(lessons => dispatch({\n    type: FIND_LESSONS,\n    // lessons: lessons\n    lessons\n  }));\n};\nexport const creatLessonForModule = (dispatch, moduleId) => {\n  console.log(\"CREATE LESSON FOR MODULE: \" + moduleId);\n  lessonService.creatLessonForModule(moduleId, {\n    title: \"NEW LESSON\"\n  }).then(lesson => dispatch({\n    type: CREATE_LESSON,\n    lesson\n  }));\n};\nexport const deleteLesson = (dispatch, item) => lessonService.deleteLesson(item._id).then(status => dispatch({\n  type: DELETE_LESSON,\n  lessonToDelete: item\n}));\nexport const updateLesson = (dispatch, lesson) => lessonService.updateLesson(lesson._id, lesson).then(status => dispatch({\n  type: UPDATE_LESSON,\n  lesson\n}));\nconst lessonActions = {\n  findLessonsForModule,\n  creatLessonForModule,\n  deleteLesson,\n  updateLesson\n};\nexport default lessonActions;","map":{"version":3,"sources":["/Users/kurtiscruz/Desktop/GitHub/wbdv-sp21-paul-cruz-client-react/src/actions/lesson-actions.js"],"names":["lessonService","FIND_LESSONS","CREATE_LESSON","DELETE_LESSON","UPDATE_LESSON","findLessonsForModule","dispatch","moduleId","console","log","then","lessons","type","creatLessonForModule","title","lesson","deleteLesson","item","_id","status","lessonToDelete","updateLesson","lessonActions"],"mappings":"AAAA,OAAOA,aAAP,MAA0B,4BAA1B;AAEA,OAAO,MAAMC,YAAY,GAAG,cAArB;AACP,OAAO,MAAMC,aAAa,GAAG,eAAtB;AACP,OAAO,MAAMC,aAAa,GAAG,eAAtB;AACP,OAAO,MAAMC,aAAa,GAAG,eAAtB;AAEP,OAAO,MAAMC,oBAAoB,GAAG,CAACC,QAAD,EAAWC,QAAX,KAAwB;AACxDC,EAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACAP,EAAAA,aAAa,CAACK,oBAAd,CAAmCE,QAAnC,EACKG,IADL,CACUC,OAAO,IAAIL,QAAQ,CAAC;AACtBM,IAAAA,IAAI,EAAEX,YADgB;AAEtB;AACAU,IAAAA;AAHsB,GAAD,CAD7B;AAMH,CATM;AAWP,OAAO,MAAME,oBAAoB,GAAG,CAACP,QAAD,EAAWC,QAAX,KAAwB;AACxDC,EAAAA,OAAO,CAACC,GAAR,CAAY,+BAA+BF,QAA3C;AACAP,EAAAA,aAAa,CAACa,oBAAd,CAAmCN,QAAnC,EAA6C;AAACO,IAAAA,KAAK,EAAE;AAAR,GAA7C,EACKJ,IADL,CACUK,MAAM,IAAIT,QAAQ,CAAC;AACrBM,IAAAA,IAAI,EAAEV,aADe;AAErBa,IAAAA;AAFqB,GAAD,CAD5B;AAKH,CAPM;AASP,OAAO,MAAMC,YAAY,GAAG,CAACV,QAAD,EAAWW,IAAX,KACxBjB,aAAa,CAACgB,YAAd,CAA2BC,IAAI,CAACC,GAAhC,EACKR,IADL,CACUS,MAAM,IAAIb,QAAQ,CAAC;AACrBM,EAAAA,IAAI,EAAET,aADe;AAErBiB,EAAAA,cAAc,EAAEH;AAFK,CAAD,CAD5B,CADG;AAOP,OAAO,MAAMI,YAAY,GAAG,CAACf,QAAD,EAAWS,MAAX,KACxBf,aAAa,CAACqB,YAAd,CAA2BN,MAAM,CAACG,GAAlC,EAAuCH,MAAvC,EACKL,IADL,CACUS,MAAM,IAAIb,QAAQ,CAAC;AACrBM,EAAAA,IAAI,EAAER,aADe;AAErBW,EAAAA;AAFqB,CAAD,CAD5B,CADG;AAOP,MAAMO,aAAa,GAAG;AAClBjB,EAAAA,oBADkB;AACIQ,EAAAA,oBADJ;AAC0BG,EAAAA,YAD1B;AACwCK,EAAAA;AADxC,CAAtB;AAIA,eAAeC,aAAf","sourcesContent":["import lessonService from \"../services/lesson-service\";\n\nexport const FIND_LESSONS = \"FIND_LESSONS\"\nexport const CREATE_LESSON = \"CREATE_LESSON\"\nexport const DELETE_LESSON = \"DELETE_LESSON\"\nexport const UPDATE_LESSON = \"UPDATE_LESSON\"\n\nexport const findLessonsForModule = (dispatch, moduleId) => {\n    console.log(\"LOAD LESSONS FOR MODULE\")\n    console.log(moduleId)\n    lessonService.findLessonsForModule(moduleId)\n        .then(lessons => dispatch({\n            type: FIND_LESSONS,\n            // lessons: lessons\n            lessons\n        }))\n}\n\nexport const creatLessonForModule = (dispatch, moduleId) => {\n    console.log(\"CREATE LESSON FOR MODULE: \" + moduleId)\n    lessonService.creatLessonForModule(moduleId, {title: \"NEW LESSON\"})\n        .then(lesson => dispatch({\n            type: CREATE_LESSON,\n            lesson\n        }))\n}\n\nexport const deleteLesson = (dispatch, item) =>\n    lessonService.deleteLesson(item._id)\n        .then(status => dispatch({\n            type: DELETE_LESSON,\n            lessonToDelete: item\n        }))\n\nexport const updateLesson = (dispatch, lesson) =>\n    lessonService.updateLesson(lesson._id, lesson)\n        .then(status => dispatch({\n            type: UPDATE_LESSON,\n            lesson\n        }))\n\nconst lessonActions = {\n    findLessonsForModule, creatLessonForModule, deleteLesson, updateLesson\n}\n\nexport default lessonActions;"]},"metadata":{},"sourceType":"module"}