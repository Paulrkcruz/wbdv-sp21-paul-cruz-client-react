{"ast":null,"code":"const MODULES_URL = \"https://wbdv-generic-server.herokuapp.com/api/cruzp/modules\";\nconst LESSONS_URL = \"https://wbdv-generic-server.herokuapp.com/api/cruzp/lessons\";\nexport const findLessonsForModule = moduleId => fetch(`${MODULES_URL}/${moduleId}/lessons`).then(response => response.json());\nexport const creatLessonForModule = (moduleId, lesson) => fetch(`${MODULES_URL}/${moduleId}/lessons`, {\n  method: \"POST\",\n  body: JSON.stringify(lesson),\n  headers: {\n    'content-type': 'application/json'\n  }\n}).then(response => response.json());\nexport const updateLesson = (lessonId, lesson) => fetch(`${LESSONS_URL}/${lessonId}`, {\n  method: \"PUT\",\n  body: JSON.stringify(lesson),\n  headers: {\n    'content-type': 'application/json'\n  }\n}).then(response => response.json());\nexport const deleteLesson = lessonId => fetch(`${LESSONS_URL}/${lessonId}`, {\n  method: \"DELETE\"\n}).then(response => response.json());\nexport default {\n  findLessonsForModule,\n  creatLessonForModule,\n  updateLesson,\n  deleteLesson\n};","map":{"version":3,"sources":["/Users/kurtiscruz/Desktop/GitHub/wbdv-sp21-paul-cruz-client-react/src/services/lesson-service.js"],"names":["MODULES_URL","LESSONS_URL","findLessonsForModule","moduleId","fetch","then","response","json","creatLessonForModule","lesson","method","body","JSON","stringify","headers","updateLesson","lessonId","deleteLesson"],"mappings":"AAAA,MAAMA,WAAW,GAAG,6DAApB;AACA,MAAMC,WAAW,GAAG,6DAApB;AAEA,OAAO,MAAMC,oBAAoB,GAAIC,QAAD,IAChCC,KAAK,CAAE,GAAEJ,WAAY,IAAGG,QAAS,UAA5B,CAAL,CACKE,IADL,CACUC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADtB,CADG;AAIP,OAAO,MAAMC,oBAAoB,GAAG,CAACL,QAAD,EAAWM,MAAX,KAChCL,KAAK,CAAE,GAAEJ,WAAY,IAAGG,QAAS,UAA5B,EAAuC;AACxCO,EAAAA,MAAM,EAAE,MADgC;AAExCC,EAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeJ,MAAf,CAFkC;AAGxCK,EAAAA,OAAO,EAAE;AACL,oBAAgB;AADX;AAH+B,CAAvC,CAAL,CAOKT,IAPL,CAOUC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAPtB,CADG;AAUP,OAAO,MAAMQ,YAAY,GAAG,CAACC,QAAD,EAAWP,MAAX,KACxBL,KAAK,CAAE,GAAEH,WAAY,IAAGe,QAAS,EAA5B,EAA+B;AAChCN,EAAAA,MAAM,EAAE,KADwB;AAEhCC,EAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeJ,MAAf,CAF0B;AAGhCK,EAAAA,OAAO,EAAE;AACL,oBAAgB;AADX;AAHuB,CAA/B,CAAL,CAOKT,IAPL,CAOUC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAPtB,CADG;AAUP,OAAO,MAAMU,YAAY,GAAID,QAAD,IACxBZ,KAAK,CAAE,GAAEH,WAAY,IAAGe,QAAS,EAA5B,EAA+B;AAChCN,EAAAA,MAAM,EAAE;AADwB,CAA/B,CAAL,CAGKL,IAHL,CAGUC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAHtB,CADG;AAMP,eAAe;AACXL,EAAAA,oBADW;AACWM,EAAAA,oBADX;AACiCO,EAAAA,YADjC;AAC+CE,EAAAA;AAD/C,CAAf","sourcesContent":["const MODULES_URL = \"https://wbdv-generic-server.herokuapp.com/api/cruzp/modules\"\nconst LESSONS_URL = \"https://wbdv-generic-server.herokuapp.com/api/cruzp/lessons\"\n\nexport const findLessonsForModule = (moduleId) =>\n    fetch(`${MODULES_URL}/${moduleId}/lessons`)\n        .then(response => response.json())\n\nexport const creatLessonForModule = (moduleId, lesson) =>\n    fetch(`${MODULES_URL}/${moduleId}/lessons`, {\n        method: \"POST\",\n        body: JSON.stringify(lesson),\n        headers: {\n            'content-type': 'application/json'\n        }\n    })\n        .then(response => response.json())\n\nexport const updateLesson = (lessonId, lesson) =>\n    fetch(`${LESSONS_URL}/${lessonId}`, {\n        method: \"PUT\",\n        body: JSON.stringify(lesson),\n        headers: {\n            'content-type': 'application/json'\n        }\n    })\n        .then(response => response.json())\n\nexport const deleteLesson = (lessonId) =>\n    fetch(`${LESSONS_URL}/${lessonId}`, {\n        method: \"DELETE\"\n    })\n        .then(response => response.json())\n\nexport default {\n    findLessonsForModule, creatLessonForModule, updateLesson, deleteLesson\n}"]},"metadata":{},"sourceType":"module"}