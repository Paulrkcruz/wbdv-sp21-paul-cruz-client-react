{"ast":null,"code":"export const findWidgetsForTopic = topicId => fetch(`http://localhost:8080/api/topics/${topicId}/widgets`).then(response => response.json());\nexport const creatWidgetForTopic = (topicId, widget) => fetch(`http://localhost:8080/api/topics/${topicId}/widgets`, {\n  method: \"POST\",\n  body: JSON.stringify(widget),\n  headers: {\n    \"content-type\": 'application/json'\n  }\n}).then(response => response.json()); // .then(response => response.json())\n// .then(actualWidget =>\n//     setWidgets(widgets => [...widgets, actualWidget]))\n\nexport const updateWidget = (id, widget) => fetch(`http://localhost:8080/api/widgets/${id}`, {\n  method: \"PUT\",\n  body: JSON.stringify(widget),\n  headers: {\n    \"content-type\": 'application/json'\n  }\n}).then(response => response.json()); //     .then(response => {\n//     setWidget({})\n//     setWidgets((widgets) => widgets.map(w => w.id !== id ? w : widget))\n// })\n\nexport const deleteWidget = id => fetch(`http://localhost:8080/api/widgets/${id}`, {\n  method: \"DELETE\"\n}).then(response => response.json()); //     .then(() => {\n//     setWidgets((widgets) => widgets.filter(w => w.id !== id))\n// })\n\nconst api = {\n  findWidgetsForTopic,\n  creatWidgetForTopic,\n  updateWidget,\n  deleteWidget\n};\nexport default api;","map":{"version":3,"sources":["/Users/kurtiscruz/Desktop/GitHub/wbdv-sp21-paul-cruz-client-react/src/services/widget-service.js"],"names":["findWidgetsForTopic","topicId","fetch","then","response","json","creatWidgetForTopic","widget","method","body","JSON","stringify","headers","updateWidget","id","deleteWidget","api"],"mappings":"AAAA,OAAO,MAAMA,mBAAmB,GAAIC,OAAD,IAC/BC,KAAK,CAAE,oCAAmCD,OAAQ,UAA7C,CAAL,CACKE,IADL,CACUC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADtB,CADG;AAIP,OAAO,MAAMC,mBAAmB,GAAG,CAACL,OAAD,EAAUM,MAAV,KAC/BL,KAAK,CAAE,oCAAmCD,OAAQ,UAA7C,EAAwD;AACzDO,EAAAA,MAAM,EAAE,MADiD;AAEzDC,EAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeJ,MAAf,CAFmD;AAGzDK,EAAAA,OAAO,EAAE;AACL,oBAAgB;AADX;AAHgD,CAAxD,CAAL,CAMGT,IANH,CAMQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EANpB,CADG,C,CAQC;AACA;AACA;;AAGR,OAAO,MAAMQ,YAAY,GAAG,CAACC,EAAD,EAAKP,MAAL,KACxBL,KAAK,CAAE,qCAAoCY,EAAG,EAAzC,EAA2C;AAC5CN,EAAAA,MAAM,EAAE,KADoC;AAE5CC,EAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeJ,MAAf,CAFsC;AAG5CK,EAAAA,OAAO,EAAE;AACL,oBAAgB;AADX;AAHmC,CAA3C,CAAL,CAMGT,IANH,CAMQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EANpB,CADG,C,CAQH;AACA;AACA;AACA;;AAEJ,OAAO,MAAMU,YAAY,GAAID,EAAD,IACxBZ,KAAK,CAAE,qCAAoCY,EAAG,EAAzC,EAA2C;AAC5CN,EAAAA,MAAM,EAAE;AADoC,CAA3C,CAAL,CAEGL,IAFH,CAEQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAFpB,CADG,C,CAIH;AACA;AACA;;AAEJ,MAAMW,GAAG,GAAG;AACRhB,EAAAA,mBADQ;AACaM,EAAAA,mBADb;AACkCO,EAAAA,YADlC;AACgDE,EAAAA;AADhD,CAAZ;AAIA,eAAeC,GAAf","sourcesContent":["export const findWidgetsForTopic = (topicId) =>\n    fetch(`http://localhost:8080/api/topics/${topicId}/widgets`)\n        .then(response => response.json())\n\nexport const creatWidgetForTopic = (topicId, widget) =>\n    fetch(`http://localhost:8080/api/topics/${topicId}/widgets`, {\n        method: \"POST\",\n        body: JSON.stringify(widget),\n        headers: {\n            \"content-type\": 'application/json'\n        }\n    }).then(response => response.json())\n        // .then(response => response.json())\n        // .then(actualWidget =>\n        //     setWidgets(widgets => [...widgets, actualWidget]))\n\n\nexport const updateWidget = (id, widget) =>\n    fetch(`http://localhost:8080/api/widgets/${id}`,{\n        method: \"PUT\",\n        body: JSON.stringify(widget),\n        headers: {\n            \"content-type\": 'application/json'\n        }\n    }).then(response => response.json())\n    //     .then(response => {\n    //     setWidget({})\n    //     setWidgets((widgets) => widgets.map(w => w.id !== id ? w : widget))\n    // })\n\nexport const deleteWidget = (id) =>\n    fetch(`http://localhost:8080/api/widgets/${id}`,{\n        method: \"DELETE\"\n    }).then(response => response.json())\n    //     .then(() => {\n    //     setWidgets((widgets) => widgets.filter(w => w.id !== id))\n    // })\n\nconst api = {\n    findWidgetsForTopic, creatWidgetForTopic, updateWidget, deleteWidget\n}\n\nexport default api;"]},"metadata":{},"sourceType":"module"}