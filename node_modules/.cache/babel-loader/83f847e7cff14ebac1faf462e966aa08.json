{"ast":null,"code":"var _jsxFileName = \"/Users/kurtiscruz/Desktop/GitHub/wbdv-sp21-paul-cruz-client-react/wbdv-sp21-paul-cruz-client-react/src/components/course-manager.js\";\nimport React from 'react';\nimport CourseTable from \"./course-table\";\nimport CourseGrid from \"./course-grid\";\nimport CourseEditor from \"./course-editor\";\nimport { Route } from \"react-router-dom\";\nimport courseService, { findAllCourses } from \"../services/course-service\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass CourseManager extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      courses: [{\n        title: \"CS5500 Software Engineering Graduate\",\n        owner: \"me\",\n        lastModified: \"1/22/2021\"\n      }, {\n        title: \"CS4550 Software Engineering Undergraduate\",\n        owner: \"me\",\n        lastModified: \"1/25/2021\"\n      }, {\n        title: \"CS4500 WebDev Undergraduate\",\n        owner: \"me\",\n        lastModified: \"1/26/2021\"\n      }, {\n        title: \"CS5610 WebDev Graduate\",\n        owner: \"me\",\n        lastModified: \"2/1/2021\"\n      }]\n    };\n\n    this.updateCourse = course => {\n      courseService.updateCourse(course._id, course).then(status => this.setState(prevState => ({ ...prevState,\n        courses: prevState.courses.map(c => c._id === course._id ? course : c) // courses: prevState.courses.map(c => {\n        //     if(c._id === course._id) {\n        //         return course\n        //     } else {\n        //         return c\n        //     }\n        //     })\n\n      })));\n    };\n\n    this.componentDidMount = () => // findAllCourses()\n    //     .then(actualCourses => this.setState({\n    //         courses.actualCourses\n    //         }\n    //     ))\n    findAllCourses().then(courses => this.setState({\n      courses\n    }));\n\n    this.addCourse = () => {\n      const newCourse = {\n        title: \"New Course\",\n        owner: \"me\",\n        lastModified: \"mm/dd/yyy\"\n      };\n      courseService.createCourse(newCourse).then(actualCourse => {\n        this.state.courses.push(actualCourse);\n        this.setState(this.state);\n      }); // .then(\n      //     course =>\n      //     this.setState((prevState) => ({\n      //     ...prevState,\n      //     courses: [\n      //         ...prevState.courses,\n      //         course\n      //     ]\n      // })))\n      // this.state.courses.push(newCourse)\n      // this.setState(this.state)\n    };\n\n    this.deleteCourse = courseToDelete => {\n      courseService.deleteCourse(courseToDelete._id).then(status => {\n        // const newCourse = this.state.courses\n        //     .filter(course => course !== courseToDelete)\n        // this.setState({\n        //     courses: newCourse})\n        this.setState(prevState => {\n          let nextState = {};\n          nextState.courses = prevState.courses.filter(course => course !== courseToDelete);\n          return nextState;\n        });\n      }); // console.log(course)\n      // const newCourse = this.state.courses.filter(course => course !== courseToDelete)\n      // this.setState({courses: newCourse})\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"wbdv-sticky-nav-bar row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-1\",\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fas fa-bars fa-2x\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-3\",\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Course Manager\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-7\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"form-control\",\n            placeholder: \"New Course Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-1\",\n          onClick: this.addCourse,\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fas fa-plus-circle fa-2x\",\n            style: {\n              color: \"red\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/courses/table\",\n        children: /*#__PURE__*/_jsxDEV(CourseTable, {\n          deleteCourse: this.deleteCourse,\n          courses: this.state.courses,\n          updateCourse: this.updateCourse\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/courses/grid\",\n        children: /*#__PURE__*/_jsxDEV(CourseGrid, {\n          deleteCourse: this.deleteCourse,\n          courses: this.state.courses\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/courses/editor\",\n        render: props => /*#__PURE__*/_jsxDEV(CourseEditor, {\n          props: props\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 43\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default CourseManager;","map":{"version":3,"sources":["/Users/kurtiscruz/Desktop/GitHub/wbdv-sp21-paul-cruz-client-react/wbdv-sp21-paul-cruz-client-react/src/components/course-manager.js"],"names":["React","CourseTable","CourseGrid","CourseEditor","Route","courseService","findAllCourses","CourseManager","Component","state","courses","title","owner","lastModified","updateCourse","course","_id","then","status","setState","prevState","map","c","componentDidMount","addCourse","newCourse","createCourse","actualCourse","push","deleteCourse","courseToDelete","nextState","filter","render","color","props"],"mappings":"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","sourcesContent":["import React from 'react'\nimport CourseTable from \"./course-table\";\nimport CourseGrid from \"./course-grid\";\nimport CourseEditor from \"./course-editor\";\nimport {Route} from \"react-router-dom\";\nimport courseService, {findAllCourses} from \"../services/course-service\";\n\n\nclass CourseManager extends React.Component {\n    state = {\n        courses: [\n            {title: \"CS5500 Software Engineering Graduate\", owner:\"me\", lastModified: \"1/22/2021\"},\n            {title: \"CS4550 Software Engineering Undergraduate\", owner:\"me\", lastModified: \"1/25/2021\"},\n            {title: \"CS4500 WebDev Undergraduate\", owner:\"me\", lastModified: \"1/26/2021\"},\n            {title: \"CS5610 WebDev Graduate\", owner:\"me\", lastModified: \"2/1/2021\"},\n        ]\n    }\n\n    updateCourse = (course) => {\n        courseService.updateCourse(course._id, course)\n            .then(status => this.setState((prevState) => ({\n                ...prevState,\n                courses: prevState.courses.map(\n                    (c) => c._id === course._id ? course : c)\n                // courses: prevState.courses.map(c => {\n                //     if(c._id === course._id) {\n                //         return course\n                //     } else {\n                //         return c\n                //     }\n                //     })\n            })))\n    }\n\n    componentDidMount = () =>\n        // findAllCourses()\n        //     .then(actualCourses => this.setState({\n        //         courses.actualCourses\n        //         }\n        //     ))\n        findAllCourses()\n            .then(courses => this.setState({courses}))\n\n    addCourse = () => {\n        const newCourse = {\n            title: \"New Course\",\n            owner: \"me\",\n            lastModified: \"mm/dd/yyy\"\n        }\n        courseService.createCourse(newCourse)\n            .then(actualCourse => {\n                this.state.courses.push(actualCourse)\n                this.setState(this.state)\n            })\n        // .then(\n        //     course =>\n        //     this.setState((prevState) => ({\n        //     ...prevState,\n        //     courses: [\n        //         ...prevState.courses,\n        //         course\n        //     ]\n        // })))\n\n        // this.state.courses.push(newCourse)\n        // this.setState(this.state)\n    }\n\n    deleteCourse = (courseToDelete) => {\n        courseService.deleteCourse(courseToDelete._id)\n            .then(status => {\n                // const newCourse = this.state.courses\n                //     .filter(course => course !== courseToDelete)\n                // this.setState({\n                //     courses: newCourse})\n                this.setState((prevState) => {\n                    let nextState = {}\n                    nextState.courses =\n                        prevState\n                            .courses\n                            .filter(course => course !== courseToDelete)\n                    return nextState\n                })\n            })\n        // console.log(course)\n        // const newCourse = this.state.courses.filter(course => course !== courseToDelete)\n        // this.setState({courses: newCourse})\n    }\n\n    render() {\n        return (\n            <div class=\"container\">\n                <div className=\"wbdv-sticky-nav-bar row\">\n                    <div className=\"col-1\">\n                        <i className=\"fas fa-bars fa-2x\"></i>\n                    </div>\n                    <div className=\"col-3\">\n                        <h2>Course Manager</h2>\n                    </div>\n                    <div className=\"col-7\">\n                        <input className=\"form-control\"\n                               placeholder=\"New Course Title\"></input>\n                    </div>\n                    <div className=\"col-1\" onClick={this.addCourse}>\n                        <i className=\"fas fa-plus-circle fa-2x\" style={{color: \"red\"}}></i>\n                        {/*<button onClick={this.addCourse}>Add Course</button>*/}\n                    </div>\n                </div>\n                <Route path=\"/courses/table\">\n                    <CourseTable deleteCourse={this.deleteCourse}\n                                 courses={this.state.courses}\n                                 updateCourse={this.updateCourse}/>\n                </Route>\n                <Route path=\"/courses/grid\">\n                    <CourseGrid deleteCourse={this.deleteCourse}\n                                courses={this.state.courses}/>\n                </Route>\n                {/*<Route path=\"/courses/editor\">*/}\n                {/*    <CourseEditor/>*/}\n                {/*</Route>*/}\n                <Route path=\"/courses/editor\"\n                       render={(props) => <CourseEditor props={props}/> }>\n\n                </Route>\n            </div>\n        );\n    }\n}\n\n\nexport default CourseManager"]},"metadata":{},"sourceType":"module"}