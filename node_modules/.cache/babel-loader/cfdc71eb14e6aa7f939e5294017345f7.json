{"ast":null,"code":"var _jsxFileName = \"/Users/kurtiscruz/Desktop/GitHub/wbdv-sp21-paul-cruz-client-react/src/components/course-editor/widgets/widget-list.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport HeadingWidget from \"./heading-widget\";\nimport ParagraphWidget from \"./paragraph-widget\";\nimport { useParams } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport widgetActions from \"../../../actions/widget-actions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst WidgetList = ({\n  myWidgets = [],\n  findWidgetsForTopic,\n  creatWidgetForTopic,\n  updateWidget,\n  deleteWidget\n}) => {\n  _s();\n\n  //TODO: move state management to widget-reducer\n  const {\n    layout,\n    courseId,\n    moduleId,\n    lessonId,\n    topicId\n  } = useParams(); // const [widgets, setWidgets] = useState([])\n\n  const [widget, setWidget] = useState({});\n  useEffect(() => {\n    // //TODO: move server communication to widget-service\n    // fetch(`http://localhost:8080/api/topics/${topicId}/widgets`)\n    //     .then(response => response.json())\n    //     .then(widgets => setWidgets(widgets))\n    if (topicId !== \"undefined\" && typeof topicId !== \"undefined\") {\n      findWidgetsForTopic(topicId);\n    }\n  }, [topicId]); // const creatWidgetForTopic = () => {\n  //     //TODO: move server communication to widget-service\n  //     fetch(`http://localhost:8080/api/topics/${topicId}/widgets`, {\n  //         method: \"POST\",\n  //         body: JSON.stringify({name: \"Widget\", type: \"HEADING\", widgetOrder: 1, text: \"New Widget\",\n  //             url: \"wedget.com\", size: 2, width: 4, cssClass:\"cssClass\", style:\"heading\", value:\"1\"}),\n  //         headers: {\n  //             \"content-type\": 'application/json'\n  //         }\n  //     })\n  //         .then(response => response.json())\n  //         .then(actualWidget =>\n  //             setWidgets(widgets => [...widgets, actualWidget]))\n  // }\n  // const deleteWidget = (id) =>\n  //     //TODO: move server communication to widget-service\n  //     fetch(`http://localhost:8080/api/widgets/${id}`,{\n  //         method: \"DELETE\"\n  //     }).then(() => {\n  //         setWidgets((widgets) => widgets.filter(w => w.id !== id))\n  //     })\n  // const updateWidget = (id, widget) =>\n  //     //TODO: move server communication to widget-service\n  //     fetch(`http://localhost:8080/api/widgets/${id}`,{\n  //         method: \"PUT\",\n  //         body: JSON.stringify(widget),\n  //         headers: {\n  //             \"content-type\": 'application/json'\n  //         }\n  //     }).then(response => {\n  //         setWidget({})\n  //         setWidgets((widgets) => widgets.map(w => w.id !== id ? w : widget))\n  //     })\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Widget List \", myWidgets.length, \" \", widget.id, /*#__PURE__*/_jsxDEV(\"i\", {\n        onClick: creatWidgetForTopic,\n        className: \"fas fa-plus float-right\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"list-group\",\n      children: myWidgets.map(_widget => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"list-group-item\",\n        children: [_widget.id === widget.id && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            onClick: () => deleteWidget(_widget.id),\n            className: \"fas fa-trash fa-2x float-right\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n            onClick: () => {\n              updateWidget(_widget.id, widget);\n            },\n            className: \"fas fa-check fa-2x float-right\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 37\n          }, this)]\n        }, void 0, true), _widget.id !== widget.id && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [widget.title, /*#__PURE__*/_jsxDEV(\"i\", {\n            onClick: () => setWidget(_widget),\n            className: \"fas fa-cog fa-2x float-right\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 37\n          }, this)]\n        }, void 0, true), _widget.type === \"HEADING\" && /*#__PURE__*/_jsxDEV(HeadingWidget, {\n          setWidget: setWidget,\n          editing: _widget.id === widget.id,\n          widget: widget\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 33\n        }, this), _widget.type === \"PARAGRAPH\" && /*#__PURE__*/_jsxDEV(ParagraphWidget, {\n          setWidget: setWidget,\n          editing: _widget.id === widget.id,\n          widget: widget\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 33\n        }, this)]\n      }, _widget.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 9\n  }, this);\n};\n\n_s(WidgetList, \"MlDA07YNC3exASPR5RMOa8hVJfM=\", false, function () {\n  return [useParams];\n});\n\n_c = WidgetList;\n\nconst stpm = state => ({\n  myWidgets: state.widgetReducer.widgets\n});\n\nconst dtpm = dispatch => {\n  return {\n    creatWidgetForTopic: topicId => widgetActions.creatWidgetForTopic(dispatch, topicId),\n    deleteWidget: item => widgetActions.deleteWidget(dispatch, item),\n    updateWidget: widget => widgetActions.updateWidget(dispatch, widget),\n    findWidgetsForTopic: topicId => widgetActions.findWidgetsForTopic(dispatch, topicId)\n  };\n};\n\nexport default connect(stpm, dtpm)(WidgetList);\n\nvar _c;\n\n$RefreshReg$(_c, \"WidgetList\");","map":{"version":3,"sources":["/Users/kurtiscruz/Desktop/GitHub/wbdv-sp21-paul-cruz-client-react/src/components/course-editor/widgets/widget-list.js"],"names":["React","useState","useEffect","HeadingWidget","ParagraphWidget","useParams","connect","widgetActions","WidgetList","myWidgets","findWidgetsForTopic","creatWidgetForTopic","updateWidget","deleteWidget","layout","courseId","moduleId","lessonId","topicId","widget","setWidget","length","id","map","_widget","title","type","stpm","state","widgetReducer","widgets","dtpm","dispatch","item"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport HeadingWidget from \"./heading-widget\";\nimport ParagraphWidget from \"./paragraph-widget\";\nimport {useParams} from \"react-router-dom\";\nimport {connect} from \"react-redux\";\nimport widgetActions from \"../../../actions/widget-actions\";\n\n\n\nconst WidgetList = (\n    {\n        myWidgets=[],\n        findWidgetsForTopic,\n        creatWidgetForTopic,\n        updateWidget,\n        deleteWidget\n    }) => {\n\n    //TODO: move state management to widget-reducer\n    const {layout, courseId, moduleId, lessonId, topicId} = useParams()\n    // const [widgets, setWidgets] = useState([])\n    const [widget, setWidget] =useState({})\n\n    useEffect(() => {\n        // //TODO: move server communication to widget-service\n        // fetch(`http://localhost:8080/api/topics/${topicId}/widgets`)\n        //     .then(response => response.json())\n        //     .then(widgets => setWidgets(widgets))\n        if (topicId !== \"undefined\" && typeof topicId !== \"undefined\") {\n            findWidgetsForTopic(topicId)\n        }\n    }, [topicId])\n\n    // const creatWidgetForTopic = () => {\n    //     //TODO: move server communication to widget-service\n    //     fetch(`http://localhost:8080/api/topics/${topicId}/widgets`, {\n    //         method: \"POST\",\n    //         body: JSON.stringify({name: \"Widget\", type: \"HEADING\", widgetOrder: 1, text: \"New Widget\",\n    //             url: \"wedget.com\", size: 2, width: 4, cssClass:\"cssClass\", style:\"heading\", value:\"1\"}),\n    //         headers: {\n    //             \"content-type\": 'application/json'\n    //         }\n    //     })\n    //         .then(response => response.json())\n    //         .then(actualWidget =>\n    //             setWidgets(widgets => [...widgets, actualWidget]))\n    // }\n\n    // const deleteWidget = (id) =>\n    //     //TODO: move server communication to widget-service\n    //     fetch(`http://localhost:8080/api/widgets/${id}`,{\n    //         method: \"DELETE\"\n    //     }).then(() => {\n    //         setWidgets((widgets) => widgets.filter(w => w.id !== id))\n    //     })\n\n    // const updateWidget = (id, widget) =>\n    //     //TODO: move server communication to widget-service\n    //     fetch(`http://localhost:8080/api/widgets/${id}`,{\n    //         method: \"PUT\",\n    //         body: JSON.stringify(widget),\n    //         headers: {\n    //             \"content-type\": 'application/json'\n    //         }\n    //     }).then(response => {\n    //         setWidget({})\n    //         setWidgets((widgets) => widgets.map(w => w.id !== id ? w : widget))\n    //     })\n\n    return(\n        <div>\n            <h2>\n                Widget List {myWidgets.length} {widget.id}\n                <i onClick={creatWidgetForTopic} className=\"fas fa-plus float-right\"></i>\n            </h2>\n            <ul className=\"list-group\">\n                {\n                    myWidgets.map(_widget =>\n                        <li key={_widget.id} className=\"list-group-item\">\n                            {\n                                _widget.id === widget.id &&\n                                <>\n                                    <i onClick={() => deleteWidget(_widget.id)} className=\"fas fa-trash fa-2x float-right\"></i>\n                                    <i onClick={() => {\n                                        updateWidget(_widget.id, widget)\n                                    }} className=\"fas fa-check fa-2x float-right\"></i>\n                                </>\n                            }\n                            {\n                                _widget.id !== widget.id &&\n                                <>\n                                    {widget.title}\n                                    <i onClick={() => setWidget(_widget)} className=\"fas fa-cog fa-2x float-right\"></i>\n                                </>\n                            }\n\n                            {\n                                _widget.type === \"HEADING\" &&\n                                <HeadingWidget\n                                    setWidget={setWidget}\n                                    editing={_widget.id === widget.id}\n                                    widget={widget}/>\n                            }\n                            {\n                                _widget.type === \"PARAGRAPH\" &&\n                                <ParagraphWidget\n                                    setWidget={setWidget}\n                                    editing={_widget.id === widget.id}\n                                    widget={widget}/>\n                            }\n                        </li>\n                    )\n                }\n            </ul>\n        </div>\n    )\n}\n\nconst stpm = (state) => ({\n    myWidgets: state.widgetReducer.widgets\n})\n\nconst dtpm = (dispatch) => {\n    return {\n        creatWidgetForTopic: (topicId) => widgetActions.creatWidgetForTopic(dispatch, topicId),\n        deleteWidget: (item) => widgetActions.deleteWidget(dispatch, item),\n        updateWidget: (widget) => widgetActions.updateWidget(dispatch, widget),\n        findWidgetsForTopic: (topicId) => widgetActions.findWidgetsForTopic(dispatch, topicId)\n    }\n}\n\nexport default connect(stpm, dtpm) (WidgetList)"]},"metadata":{},"sourceType":"module"}