{"ast":null,"code":"var _jsxFileName = \"/Users/kurtiscruz/Desktop/GitHub/wbdv-sp21-paul-cruz-client-react/wbdv-sp21-paul-cruz-client-react/src/components/course-manager.js\";\nimport React from 'react';\nimport CourseTable from \"./course-table\";\nimport CourseGrid from \"./course-grid\";\nimport CourseEditor from \"./course-editor\";\nimport { Route } from \"react-router-dom\";\nimport courseService, { findAllCourses } from \"../services/course-service\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass CourseManager extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      newCourseTitle: '',\n      courses: [],\n      order: 'aToZ'\n    };\n\n    this.deleteCourse = courseToDelete => {\n      courseService.deleteCourse(courseToDelete.id).then(() => {\n        courseService.findAllCourses().then(courses => {\n          this.setState({\n            courses: courses\n          });\n        });\n      });\n    };\n\n    this.addCourse = () => {\n      this.date = new Date();\n      this.state.newCourseTitle === '' ? alert('Please Enter a Valid Course Title!') : courseService.createCourse({\n        title: this.state.newCourseTitle,\n        dateCreated: this.date.getMonth() + 1 + '/' + this.date.getDate() + '/' + this.date.getFullYear(),\n        dateModified: this.date.getMonth() + 1 + '/' + this.date.getDate() + '/' + this.date.getFullYear()\n      }).then(() => {\n        courseService.findAllCourses().then(courses => {\n          this.setState({\n            courses: courses,\n            newCourseTitle: ''\n          });\n        });\n      });\n    };\n\n    this.updateFormState = event => {\n      this.setState({\n        newCourseTitle: event.target.value\n      });\n    };\n\n    this.editCourse = course => {\n      this.setState(prevState => ({\n        courses: prevState.courses.map(crs => {\n          crs.editing = course.id === crs.id;\n          return crs;\n        })\n      }));\n    };\n\n    this.updateCourse = course => {\n      this.date = new Date();\n      course.dateModified = this.date.getMonth() + 1 + '/' + this.date.getDate() + '/' + this.date.getFullYear();\n      courseService.updateCourse(course.id, course).then(() => {\n        courseService.findAllCourses().then(courses => {\n          this.setState({\n            courses: courses\n          });\n        });\n      });\n    };\n\n    this.sortCourses = () => {\n      this.setState(prev => {\n        let sortedCourses = [...prev.courses];\n\n        if (this.state.order === 'aToZ') {\n          sortedCourses.sort((a, b) => {\n            if (a.title.toLowerCase() < b.title.toLowerCase()) return 1;else return -1;\n          });\n          return {\n            courses: sortedCourses,\n            order: 'zToA'\n          };\n        } else {\n          sortedCourses.sort((a, b) => {\n            if (a.title.toLowerCase() > b.title.toLowerCase()) return 1;else return -1;\n          });\n          return {\n            courses: sortedCourses,\n            order: 'aToZ'\n          };\n        }\n      });\n    };\n  }\n\n  componentDidMount() {\n    courseService.findAllCourses().then(courses => {\n      this.setState({\n        courses: courses\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-fluid p-0\",\n      children: /*#__PURE__*/_jsxDEV(Router, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/\",\n          children: /*#__PURE__*/_jsxDEV(Redirect, {\n            to: \"/courseList/table\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/courseList/table\",\n          render: props => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(CourseHeadingComponent, {\n              updateFormState: this.updateFormState,\n              newCourseTitle: this.state.newCourseTitle,\n              addCourse: this.addCourse\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(CourseTableComponent, { ...props,\n              order: this.state.order,\n              deleteCourse: this.deleteCourse,\n              editCourse: this.editCourse,\n              updateCourse: this.updateCourse,\n              sortCourses: this.sortCourses,\n              courses: this.state.courses\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/courseList/grid\",\n          render: props => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(CourseHeadingComponent, {\n              updateFormState: this.updateFormState,\n              newCourseTitle: this.state.newCourseTitle,\n              addCourse: this.addCourse\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(CourseGridComponent, { ...props,\n              order: this.state.order,\n              deleteCourse: this.deleteCourse,\n              editCourse: this.editCourse,\n              updateCourse: this.updateCourse,\n              sortCourses: this.sortCourses,\n              courses: this.state.courses\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/courses/:courseId/modules/:moduleId/lessons/:lessonId/topics/:topicId\",\n          exact: true,\n          component: CourseEditorContainer\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/courses/:courseId/modules/:moduleId/lessons/:lessonId\",\n          exact: true,\n          component: CourseEditorContainer\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/courses/:courseId/modules/:moduleId\",\n          exact: true,\n          component: CourseEditorContainer\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/courses/:courseId\",\n          exact: true,\n          component: CourseEditorContainer\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default CourseManager;","map":{"version":3,"sources":["/Users/kurtiscruz/Desktop/GitHub/wbdv-sp21-paul-cruz-client-react/wbdv-sp21-paul-cruz-client-react/src/components/course-manager.js"],"names":["React","CourseTable","CourseGrid","CourseEditor","Route","courseService","findAllCourses","CourseManager","Component","state","newCourseTitle","courses","order","deleteCourse","courseToDelete","id","then","setState","addCourse","date","Date","alert","createCourse","title","dateCreated","getMonth","getDate","getFullYear","dateModified","updateFormState","event","target","value","editCourse","course","prevState","map","crs","editing","updateCourse","sortCourses","prev","sortedCourses","sort","a","b","toLowerCase","componentDidMount","render","props","CourseEditorContainer"],"mappings":"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","sourcesContent":["import React from 'react'\nimport CourseTable from \"./course-table\";\nimport CourseGrid from \"./course-grid\";\nimport CourseEditor from \"./course-editor\";\nimport {Route} from \"react-router-dom\";\nimport courseService, {findAllCourses} from \"../services/course-service\";\n\n\n\nclass CourseManager extends React.Component {\n    date;\n\n    state = {\n        newCourseTitle: '',\n        courses: [],\n        order: 'aToZ'\n    }\n\n    componentDidMount() {\n        courseService.findAllCourses()\n            .then(courses => {\n                this.setState({\n                    courses: courses\n                })\n            })\n    }\n\n    deleteCourse = (courseToDelete) => {\n        courseService.deleteCourse(courseToDelete.id)\n            .then(() => {\n                courseService.findAllCourses()\n                    .then(courses => {\n                        this.setState({\n                            courses: courses\n                        })\n                    })\n            })\n    }\n\n    addCourse = () => {\n        this.date = new Date();\n        this.state.newCourseTitle === ''? alert('Please Enter a Valid Course Title!'):\n            courseService.createCourse({\n                title: this.state.newCourseTitle,\n                dateCreated: this.date.getMonth()+1 + '/' + this.date.getDate() + '/' + this.date.getFullYear(),\n                dateModified : this.date.getMonth()+1 + '/' + this.date.getDate() + '/' + this.date.getFullYear()\n            }).then(() => {\n                courseService.findAllCourses()\n                    .then(courses => {\n                        this.setState({\n                            courses: courses,\n                            newCourseTitle: '',\n                        })\n                    })\n            })\n    }\n\n    updateFormState = (event) => {\n        this.setState({\n            newCourseTitle: event.target.value\n        })\n    }\n\n    editCourse = (course) => {\n        this.setState(prevState => ({\n                courses: prevState.courses.map (crs => {\n                    crs.editing = course.id === crs.id;\n                    return crs\n                })\n            })\n        )\n    }\n\n    updateCourse = (course) => {\n        this.date = new Date();\n        course.dateModified =  this.date.getMonth()+1 + '/' + this.date.getDate() + '/' + this.date.getFullYear();\n        courseService.updateCourse(course.id, course)\n            .then(() => {\n                courseService.findAllCourses()\n                    .then(courses => {\n                        this.setState({\n                            courses: courses\n                        })\n                    })\n            })\n    }\n\n    sortCourses = () => {\n        this.setState(prev => {\n            let sortedCourses = [...prev.courses];\n            if (this.state.order === 'aToZ') {\n                sortedCourses.sort((a,b) => {\n                    if (a.title.toLowerCase() < b.title.toLowerCase()) return 1;\n                    else return -1;\n                })\n                return {\n                    courses: sortedCourses,\n                    order: 'zToA'\n                }\n            }\n            else {\n                sortedCourses.sort((a,b) => {\n                    if (a.title.toLowerCase() > b.title.toLowerCase()) return 1;\n                    else return -1;\n                })\n                return {\n                    courses: sortedCourses,\n                    order: 'aToZ'\n                }\n            }\n        })\n    };\n\n\n    render() {\n        return (\n            <div className=\"container-fluid p-0\">\n                <Router>\n                    <Route exact={true} path=\"/\">\n                        <Redirect to=\"/courseList/table\"/>\n                    </Route>\n\n                    <Route path=\"/courseList/table\" render={(props) =>\n                        <div>\n                            <CourseHeadingComponent\n                                updateFormState = {this.updateFormState}\n                                newCourseTitle = {this.state.newCourseTitle}\n                                addCourse = {this.addCourse}/>\n                            <CourseTableComponent\n                                {...props}\n                                order = {this.state.order}\n                                deleteCourse={this.deleteCourse}\n                                editCourse={this.editCourse}\n                                updateCourse={this.updateCourse}\n                                sortCourses={this.sortCourses}\n                                courses={this.state.courses}/>\n                        </div>\n                    }/>\n\n                    <Route path=\"/courseList/grid\" render={(props) =>\n                        <div>\n                            <CourseHeadingComponent\n                                updateFormState = {this.updateFormState}\n                                newCourseTitle = {this.state.newCourseTitle}\n                                addCourse = {this.addCourse}/>\n                            <CourseGridComponent\n                                {...props}\n                                order = {this.state.order}\n                                deleteCourse={this.deleteCourse}\n                                editCourse={this.editCourse}\n                                updateCourse={this.updateCourse}\n                                sortCourses={this.sortCourses}\n                                courses={this.state.courses}/>\n                        </div>\n                    }/>\n\n                    <Route path=\"/courses/:courseId/modules/:moduleId/lessons/:lessonId/topics/:topicId\" exact={true} component={CourseEditorContainer}/>\n                    <Route path=\"/courses/:courseId/modules/:moduleId/lessons/:lessonId\" exact={true} component={CourseEditorContainer}/>\n                    <Route path=\"/courses/:courseId/modules/:moduleId\" exact={true} component={CourseEditorContainer}/>\n                    <Route path=\"/courses/:courseId\" exact={true} component={CourseEditorContainer}/>\n                </Router>\n            </div>\n        )\n    }\n}\n\nexport default CourseManager"]},"metadata":{},"sourceType":"module"}